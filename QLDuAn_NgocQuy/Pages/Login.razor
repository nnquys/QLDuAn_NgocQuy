@page "/"
@using QLDuAn_NgocQuy.Data
@using QLDuAn_NgocQuy.Models
@inject NavigationManager Navigation
@inject AppDbContext DbContext
@using Microsoft.EntityFrameworkCore
<div class="d-flex flex-column min-vh-100 justify-content-center align-items-center bg-blue text-white p-5">

<div class="d-flex justify-content-center align-items-center vh-100">
    <div class="card p-4 shadow-sm">
        <div class="alert alert-info" role="alert">
            <h3 class="text-center">Hệ thống Quản lí dự án</h3>
            <EditForm Model="@loginModel" OnValidSubmit="@HandleLogin">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label class="form-label">Tài khoản: </label>
                    <InputText class="form-control" @bind-Value="loginModel.Username" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Mật khẩu: </label>
                    <InputText class="form-control" @bind-Value="loginModel.Password" type="password" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Mã thành viên: </label>
                    <InputText class="form-control" @bind-Value="loginModel.IDMember" />
                </div>
                <button type="submit" class="btn btn-primary w-100">Đăng nhập</button>
            </EditForm>

            @if (loginFailed)
            {
                <p style="color: red;" class="text-center">Invalid username or password</p>
            }

            @if (errorMessage != null)
            {
                <p style="color: red;" class="text-center">@errorMessage</p>
            }
        </div>
    </div>
</div>
</div>
@code {
    private LoginModel loginModel = new LoginModel();
    private bool loginFailed = false;
    private string errorMessage;

    private async Task HandleLogin()
    {
        try
        {
            var dangNhap = await DbContext.DangNhap
                .FirstOrDefaultAsync(u => u.TaiKhoan == loginModel.Username && u.MatKhau == loginModel.Password && u.MaThanhVien == loginModel.IDMember);

            if (dangNhap != null)
            {
                Console.WriteLine($"Login successful for memberId: {loginModel.IDMember}"); // Debugging info
                Navigation.NavigateTo($"/trangchu?memberId={loginModel.IDMember}");
            }
            else
            {
                loginFailed = true;
                Console.WriteLine("Login failed: Invalid username or password"); // Debugging info
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error during login: {ex.Message}";
            Console.WriteLine($"Error during login: {ex.Message}");
        }
    }

    public class LoginModel
    {
        public string Username { get; set; }
        public string Password { get; set; }
        public string IDMember { get; set; }
    }
}
<style>
    .bg-blue {
        background-color: #CCCCFF;
        color: white;
    }

    .min-vh-100 {
        min-height: 100vh;
    }
</style>
